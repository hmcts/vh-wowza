variables:
  - group: vh-wowza
  - group: vh-infra-dev
  - group: vh-infra-prod
  - name: deploymentResource
    value: vh_wowza
  - name: baseAgent
    value: ubuntu-latest


trigger:
  branches:
    include:
    - master
    - release/*
    - hotfix/*

pr:
  branches:
    include:
    - master

stages:
  - stage: Plan_Dev_Environments
    jobs:
    - job: Dev_Plan
      pool:
          vmImage: ${{ variables.baseAgent }}

      variables:
        - group: vh-infra-dev
        - name: environment
          value: dev

      steps:
      - checkout: self
        clean: true

      - task: DownloadSecureFile@1
        name: sshPubKey
        displayName: Download SSH Public Key
        inputs:
          secureFile: $(sshKeyName)

      - task: AzureCLI@2
        displayName: Add keyvault FW Exception
        inputs:
          azureSubscription: $(infra_arm_service_connection_dev)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_dev)

      - template: pipeline/terraform-plan.yml
        parameters:
          storageAccount: $(infra_storage_account_dev)
          environment: $(environment)
          serviceConnections:
            arm: $(infra_arm_service_connection_dev)
            dns: $(infra_arm_service_connection_prod)
          tf_params:
            dns_tenant_id: $(dns_Tenant_Id)
            dns_client_id: $(dns_Client_Id)
            dns_client_secret: $(dns_Client_Secret)
            dns_subscription_id: $(dns_Subscription_Id)
            dns_zone_name: $(publicDnsZoneName)
            dns_resource_group: $(publicDnsZoneResourceGroup)
            admin_ssh_key_path: $(sshPubKey.secureFilePath)
            service_certificate_thumbprint: $(publicCertThumbprint)
            service_certificate_kv_url: $(publicCertKVSecretUrl_dev)
            key_vault_id: $(publicCertKVResourceId_dev)

      - task: AzureCLI@2
        displayName: Remove KeyVault FW Exception
        condition: always()
        inputs:
          azureSubscription: $(infra_arm_service_connection_dev)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_dev)

  - stage: Approve_Terraform_Dev
    displayName: 'Approve Terraform Dev'
    dependsOn: Plan_Dev_Environments
    jobs:
      - job: waitForValidation
        displayName: 'Approve Terraform Dev'
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
            instructions: 'Please Approve for Terraform Release...'
            onTimeout: 'reject'

  - stage: Deploy_Dev_Environments
    condition: or( contains(variables['Build.SourceBranch'], 'refs/heads/master'), contains(variables['Build.SourceBranch'], 'refs/pull') )
    dependsOn:
      - Approve_Terraform_Dev
    jobs:
      - template: pipeline/terraform-deployment.yml
        parameters:
          name: ${{ variables.deploymentResource }}
          vmImage: ${{ variables.baseAgent }}

          environments:
            - name: dev
              storageAccount: $(infra_storage_account_dev)
              serviceConnections:
                arm: $(infra_arm_service_connection_dev)
                dns: $(infra_arm_service_connection_prod)
              tf_params:
                dns_tenant_id: $(dns_Tenant_Id)
                dns_client_id: $(dns_Client_Id)
                dns_client_secret: $(dns_Client_Secret)
                dns_subscription_id: $(dns_Subscription_Id)
                dns_zone_name: $(publicDnsZoneName)
                dns_resource_group: $(publicDnsZoneResourceGroup)
                admin_ssh_key_path: $(sshPubKey.secureFilePath)
                service_certificate_thumbprint: $(publicCertThumbprint)
                service_certificate_kv_url: $(publicCertKVSecretUrl_dev)
                key_vault_id: $(publicCertKVResourceId_dev)
              preSteps:
                - task: DownloadSecureFile@1
                  name: sshPubKey
                  displayName: Download SSH Public Key
                  inputs:
                    secureFile: $(sshKeyName)
                - task: AzureCLI@2
                  displayName: Add keyvault FW Exception
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_dev)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_dev)
              postSteps:
                - task: AzureCLI@2
                  displayName: Remove KeyVault FW Exception
                  condition: always()
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_dev)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_dev)

  - stage: Plan_Demo_Environments
    dependsOn:
      - Deploy_Dev_Environments
    jobs:
    - job: Demo_Plan
      pool:
          vmImage: ${{ variables.baseAgent }}

      variables:
        - group: vh-infra-dev
        - name: environment
          value: demo

      steps:
      - checkout: self
        clean: true

      - task: DownloadSecureFile@1
        name: sshPubKey
        displayName: Download SSH Public Key
        inputs:
          secureFile: $(sshKeyName)

      - task: AzureCLI@2
        displayName: Add keyvault FW Exception
        inputs:
          azureSubscription: $(infra_arm_service_connection_dev)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_demo)


      - template: pipeline/terraform-plan.yml
        parameters:
          storageAccount: $(infra_storage_account_dev)
          environment: $(environment)
          serviceConnections:
            arm: $(infra_arm_service_connection_dev)
            dns: $(infra_arm_service_connection_prod)
          tf_params:
            dns_tenant_id: $(dns_Tenant_Id)
            dns_client_id: $(dns_Client_Id)
            dns_client_secret: $(dns_Client_Secret)
            dns_subscription_id: $(dns_Subscription_Id)
            dns_zone_name: $(publicDnsZoneName)
            dns_resource_group: $(publicDnsZoneResourceGroup)
            admin_ssh_key_path: $(sshPubKey.secureFilePath)
            service_certificate_thumbprint: $(publicCertThumbprint)
            service_certificate_kv_url: $(publicCertKVSecretUrl_demo)
            key_vault_id: $(publicCertKVResourceId_demo)

      - task: AzureCLI@2
        displayName: Remove KeyVault FW Exception
        condition: always()
        inputs:
          azureSubscription: $(infra_arm_service_connection_dev)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_demo)

  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    - stage: Approve_Terraform_Demo
      displayName: 'Approve Terraform Demo'
      dependsOn: Plan_Demo_Environments
      jobs:
        - job: waitForValidation
          displayName: 'Approve Terraform Demo'
          pool: server
          timeoutInMinutes: 4320 # job times out in 3 days
          steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please Approve for Terraform Release...'
              onTimeout: 'reject'

  - stage: Deploy_Demo_Environments
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    dependsOn:
      - Plan_Demo_Environments
      - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
        - Approve_Terraform_Demo
    jobs:
      - template: pipeline/terraform-deployment.yml
        parameters:
          name: ${{ variables.deploymentResource }}
          vmImage: ${{ variables.baseAgent }}

          environments:
            - name: demo
              storageAccount: $(infra_storage_account_dev)
              serviceConnections:
                arm: $(infra_arm_service_connection_dev)
                dns: $(infra_arm_service_connection_prod)
              tf_params:
                dns_tenant_id: $(dns_Tenant_Id)
                dns_client_id: $(dns_Client_Id)
                dns_client_secret: $(dns_Client_Secret)
                dns_subscription_id: $(dns_Subscription_Id)
                dns_zone_name: $(publicDnsZoneName)
                dns_resource_group: $(publicDnsZoneResourceGroup)
                admin_ssh_key_path: $(sshPubKey.secureFilePath)
                service_certificate_thumbprint: $(publicCertThumbprint)
                service_certificate_kv_url: $(publicCertKVSecretUrl_demo)
                key_vault_id: $(publicCertKVResourceId_demo)
              preSteps:
                - task: DownloadSecureFile@1
                  name: sshPubKey
                  displayName: Download SSH Public Key
                  inputs:
                    secureFile: $(sshKeyName)
                - task: AzureCLI@2
                  displayName: Add keyvault FW Exception
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_dev)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_demo)
              postSteps:
                - task: AzureCLI@2
                  displayName: Remove KeyVault FW Exception
                  condition: always()
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_dev)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_demo)

  - stage: Plan_Preprod_Environments
    dependsOn:
      - Deploy_Dev_Environments
    jobs:
    - job: Preprod_Plan
      pool:
          vmImage: ${{ variables.baseAgent }}

      variables:
        - group: vh-infra-prod
        - name: environment
          value: preprod

      steps:
      - checkout: self
        clean: true

      - task: DownloadSecureFile@1
        name: sshPubKey
        displayName: Download SSH Public Key
        inputs:
          secureFile: $(sshKeyName)

      - task: AzureCLI@2
        displayName: Add keyvault FW Exception
        inputs:
          azureSubscription: $(infra_arm_service_connection_prod)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_preprod)

      - template: pipeline/terraform-plan.yml
        parameters:
          storageAccount: $(infra_storage_account_prod)
          environment: $(environment)
          serviceConnections:
            arm: $(infra_arm_service_connection_prod)
            dns: $(infra_arm_service_connection_prod)
          tf_params:
            dns_tenant_id: $(dns_Tenant_Id)
            dns_client_id: $(dns_Client_Id)
            dns_client_secret: $(dns_Client_Secret)
            dns_subscription_id: $(dns_Subscription_Id)
            dns_zone_name: $(publicDnsZoneName)
            dns_resource_group: $(publicDnsZoneResourceGroup)
            admin_ssh_key_path: $(sshPubKey.secureFilePath)
            service_certificate_thumbprint: $(publicCertThumbprint)
            service_certificate_kv_url: $(publicCertKVSecretUrl_preprod)
            key_vault_id: $(publicCertKVResourceId_preprod)

      - task: AzureCLI@2
        displayName: Remove KeyVault FW Exception
        condition: always()
        inputs:
          azureSubscription: $(infra_arm_service_connection_prod)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_preprod)

  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    - stage: Approve_Terraform_PreProd
      displayName: 'Approve Terraform PreProd'
      dependsOn: Plan_Preprod_Environments
      jobs:
        - job: waitForValidation
          displayName: 'Approve Terraform PreProd'
          pool: server
          timeoutInMinutes: 4320 # job times out in 3 days
          steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please Approve for Terraform Release...'
              onTimeout: 'reject'

  - stage: Deploy_Preprod_Environments
    condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')))
    dependsOn:
      - Plan_Preprod_Environments
      - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
        - Approve_Terraform_PreProd
    jobs:
      - template: pipeline/terraform-deployment.yml
        parameters:
          name: ${{ variables.deploymentResource }}
          vmImage: ${{ variables.baseAgent }}

          environments:
            - name: preprod
              storageAccount: $(infra_storage_account_prod)
              serviceConnections:
                arm: $(infra_arm_service_connection_prod)
                dns: $(infra_arm_service_connection_prod)
              tf_params:
                dns_tenant_id: $(dns_Tenant_Id)
              dns_client_id: $(dns_Client_Id)
              dns_client_secret: $(dns_Client_Secret)
              dns_subscription_id: $(dns_Subscription_Id)
              dns_zone_name: $(publicDnsZoneName)
              dns_resource_group: $(publicDnsZoneResourceGroup)
              admin_ssh_key_path: $(sshPubKey.secureFilePath)
              service_certificate_thumbprint: $(publicCertThumbprint)
              service_certificate_kv_url: $(publicCertKVSecretUrl_preprod)
              key_vault_id: $(publicCertKVResourceId_preprod)
              preSteps:
                - task: DownloadSecureFile@1
                  name: sshPubKey
                  displayName: Download SSH Public Key
                  inputs:
                    secureFile: $(sshKeyName)
                - task: AzureCLI@2
                  displayName: Add keyvault FW Exception
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_prod)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_preprod)
              postSteps:
                - task: AzureCLI@2
                  displayName: Remove KeyVault FW Exception
                  condition: always()
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_prod)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_preprod)


  - stage: Plan_Prod_Environments
    dependsOn:
      - Deploy_Preprod_Environments
    jobs:
    - job: Prod_Plan
      pool:
          vmImage: ${{ variables.baseAgent }}

      variables:
        - group: vh-infra-prod
        - name: environment
          value: prod

      steps:
      - checkout: self
        clean: true

      - task: DownloadSecureFile@1
        name: sshPubKey
        displayName: Download SSH Public Key
        inputs:
          secureFile: $(sshKeyName)

      - task: AzureCLI@2
        displayName: Add keyvault FW Exception
        inputs:
          azureSubscription: $(infra_arm_service_connection_prod)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_prod)

      - template: pipeline/terraform-plan.yml
        parameters:
          storageAccount: $(infra_storage_account_prod)
          environment: $(environment)
          serviceConnections:
            arm: $(infra_arm_service_connection_prod)
            dns: $(infra_arm_service_connection_prod)
          tf_params:
            dns_tenant_id: $(dns_Tenant_Id)
            dns_client_id: $(dns_Client_Id)
            dns_client_secret: $(dns_Client_Secret)
            dns_subscription_id: $(dns_Subscription_Id)
            dns_zone_name: $(publicDnsZoneName)
            dns_resource_group: $(publicDnsZoneResourceGroup)
            admin_ssh_key_path: $(sshPubKey.secureFilePath)
            service_certificate_thumbprint: $(publicCertThumbprint)
            service_certificate_kv_url: $(publicCertKVSecretUrl_prod)
            key_vault_id: $(publicCertKVResourceId_prod)

      - task: AzureCLI@2
        displayName: Remove KeyVault FW Exception
        condition: always()
        inputs:
          azureSubscription: $(infra_arm_service_connection_prod)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
            az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
        env:
          keyVaultName: $(publicCertKVName_prod)

  - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    - stage: Approve_Terraform_Prod
      displayName: 'Approve Terraform Prod'
      dependsOn: Plan_Prod_Environments
      jobs:
        - job: waitForValidation
          displayName: 'Approve Terraform Prod'
          pool: server
          timeoutInMinutes: 4320 # job times out in 3 days
          steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              instructions: 'Please Approve for Terraform Release...'
              onTimeout: 'reject'

  - stage: Deploy_Prod_Environments
    condition: and(succeeded(), or(startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/')))
    dependsOn:
      - Plan_Prod_Environments
      - Deploy_Preprod_Environments
      - ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
        - Approve_Terraform_Prod
    jobs:
      - template: pipeline/terraform-deployment.yml
        parameters:
          name: ${{ variables.deploymentResource }}
          vmImage: ${{ variables.baseAgent }}

          environments:
            - name: prod
              storageAccount: $(infra_storage_account_prod)
              serviceConnections:
                arm: $(infra_arm_service_connection_prod)
                dns: $(infra_arm_service_connection_prod)
              tf_params:
                dns_tenant_id: $(dns_Tenant_Id)
                dns_client_id: $(dns_Client_Id)
                dns_client_secret: $(dns_Client_Secret)
                dns_subscription_id: $(dns_Subscription_Id)
                dns_zone_name: $(publicDnsZoneName)
                dns_resource_group: $(publicDnsZoneResourceGroup)
                admin_ssh_key_path: $(sshPubKey.secureFilePath)
                service_certificate_thumbprint: $(publicCertThumbprint)
                service_certificate_kv_url: $(publicCertKVSecretUrl_prod)
                key_vault_id: $(publicCertKVResourceId_prod)
              preSteps:
                - task: DownloadSecureFile@1
                  name: sshPubKey
                  displayName: Download SSH Public Key
                  inputs:
                    secureFile: $(sshKeyName)
                - task: AzureCLI@2
                  displayName: Add keyvault FW Exception
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_prod)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule add --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_prod)
              postSteps:
                - task: AzureCLI@2
                  displayName: Remove KeyVault FW Exception
                  condition: always()
                  inputs:
                    azureSubscription: $(infra_arm_service_connection_prod)
                    scriptType: pscore
                    scriptLocation: inlineScript
                    inlineScript: |
                      $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
                      az keyvault network-rule remove --name $env:keyVaultName --ip-address "$IP/32"
                  env:
                    keyVaultName: $(publicCertKVName_prod